/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.l33t_c0d3r_66.notepad;

import java.awt.print.PrinterJob;
import java.io.File;
import java.io.FileWriter;
import java.io.RandomAccessFile;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author l33t-c0d3r-66
 */
public class Notepad extends javax.swing.JFrame {
    private int hour=0;
    private String text = "",textToSearch = "";
    private boolean flag = false;
    private String stringTime = "";
    
    private final Date date = new Date();
    private final GregorianCalendar georgianCalendar = new GregorianCalendar();
    private final PrinterJob printJob = PrinterJob.getPrinterJob();
    
    /**
     * Creates new form Notepad
     */
    
    public Notepad() {
        initComponents();
        date();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newFileBtn = new javax.swing.JMenuItem();
        openFileBtn = new javax.swing.JMenuItem();
        saveFileBtn = new javax.swing.JMenuItem();
        saveAsBtn = new javax.swing.JMenuItem();
        pageSetupBtn = new javax.swing.JMenuItem();
        printBtn = new javax.swing.JMenuItem();
        exitBtn = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutBtn = new javax.swing.JMenuItem();
        copyBtn = new javax.swing.JMenuItem();
        pasteBtn = new javax.swing.JMenuItem();
        deleteBtn = new javax.swing.JMenuItem();
        selectAllBtn = new javax.swing.JMenuItem();
        findBtn = new javax.swing.JMenuItem();
        dateTimeBtn = new javax.swing.JMenuItem();
        wordRapBtn = new javax.swing.JCheckBoxMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutBtn = new javax.swing.JMenuItem();
        featureUpdateBtn = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Notepad");

        textArea.setColumns(20);
        textArea.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        fileMenu.setText("File");

        newFileBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        newFileBtn.setText("New");
        newFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFileBtnActionPerformed(evt);
            }
        });
        fileMenu.add(newFileBtn);

        openFileBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        openFileBtn.setText("Open");
        openFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileBtnActionPerformed(evt);
            }
        });
        fileMenu.add(openFileBtn);

        saveFileBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        saveFileBtn.setText("Save");
        saveFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileBtnActionPerformed(evt);
            }
        });
        fileMenu.add(saveFileBtn);

        saveAsBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F12, 0));
        saveAsBtn.setText("Save As");
        saveAsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsBtnActionPerformed(evt);
            }
        });
        fileMenu.add(saveAsBtn);

        pageSetupBtn.setText("Page Setup");
        pageSetupBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pageSetupBtnActionPerformed(evt);
            }
        });
        fileMenu.add(pageSetupBtn);

        printBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        printBtn.setText("Print");
        printBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBtnActionPerformed(evt);
            }
        });
        fileMenu.add(printBtn);

        exitBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_DOWN_MASK));
        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });
        fileMenu.add(exitBtn);

        jMenuBar1.add(fileMenu);

        editMenu.setText("Edit");

        cutBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        cutBtn.setText("Cut");
        cutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cutBtnActionPerformed(evt);
            }
        });
        editMenu.add(cutBtn);

        copyBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        copyBtn.setText("Copy");
        copyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyBtnActionPerformed(evt);
            }
        });
        editMenu.add(copyBtn);

        pasteBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        pasteBtn.setText("Paste");
        pasteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasteBtnActionPerformed(evt);
            }
        });
        editMenu.add(pasteBtn);

        deleteBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        editMenu.add(deleteBtn);

        selectAllBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        selectAllBtn.setText("Select All");
        selectAllBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectAllBtnActionPerformed(evt);
            }
        });
        editMenu.add(selectAllBtn);

        findBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        findBtn.setText("Find");
        findBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findBtnActionPerformed(evt);
            }
        });
        editMenu.add(findBtn);

        dateTimeBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        dateTimeBtn.setText("Date/Time");
        dateTimeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateTimeBtnActionPerformed(evt);
            }
        });
        editMenu.add(dateTimeBtn);

        wordRapBtn.setSelected(true);
        wordRapBtn.setText("Word Rap");
        wordRapBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wordRapBtnActionPerformed(evt);
            }
        });
        editMenu.add(wordRapBtn);

        jMenuBar1.add(editMenu);

        helpMenu.setText("Help");

        aboutBtn.setText("About");
        aboutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutBtnActionPerformed(evt);
            }
        });
        helpMenu.add(aboutBtn);

        featureUpdateBtn.setText("Features and Update");
        featureUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                featureUpdateBtnActionPerformed(evt);
            }
        });
        helpMenu.add(featureUpdateBtn);

        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String date()
    {
	hour = georgianCalendar.get(Calendar.HOUR);
	if (hour == 0)
        {
            hour = 12;
        }
	georgianCalendar.setTime(date);	
	if(georgianCalendar.get(Calendar.AM_PM) == 0)
	{
            stringTime = hour + ":" + georgianCalendar.get(Calendar.MINUTE) + " AM " + (georgianCalendar.get(Calendar.MONTH)+1) + "/" + georgianCalendar.get(Calendar.DATE) + "/" + georgianCalendar.get(Calendar.YEAR);
	}
	if (georgianCalendar.get(Calendar.AM_PM) == 1)
	{
            stringTime = hour + ":" + georgianCalendar.get(Calendar.MINUTE) + " PM " + (georgianCalendar.get(Calendar.MONTH)+1) + "/" + georgianCalendar.get(Calendar.DATE) + "/" + georgianCalendar.get(Calendar.YEAR);
	}
	return stringTime;
		
    }
    private void newFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFileBtnActionPerformed
       textArea.setText("");
    }//GEN-LAST:event_newFileBtnActionPerformed

    private void openFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileBtnActionPerformed
        flag = true;
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Text Documents (*.txt)", "txt"));
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.showOpenDialog(this);
        File file = fileChooser.getSelectedFile();
	try
	{
            RandomAccessFile raf = new RandomAccessFile(file,"rw");
            long size = raf.length();
            String msg = "";		
            for(int i=0;i<size;i++)
            {
                char words = (char)raf.read();
		msg = msg + words;
            }
            textArea.setText(msg);
				
	}
	catch(Exception ex)
	{
            JOptionPane.showMessageDialog(this,"Failed to Open a File","Open Error",JOptionPane.ERROR);
	}
        
    }//GEN-LAST:event_openFileBtnActionPerformed

    private void saveAsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsBtnActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Text Documents (*.txt)", "txt"));
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.showSaveDialog(this);
        File file = fileChooser.getSelectedFile();
        if(file != null)
        {
            boolean isSaved = saveFile(file);
            if(isSaved)
            {
                JOptionPane.showMessageDialog(this,"File Saved Successfully!","Save As",JOptionPane.INFORMATION_MESSAGE);
            }   
        }
    }//GEN-LAST:event_saveAsBtnActionPerformed

    private boolean saveFile(File file)
    {
        try(FileWriter fw = new FileWriter(file+".txt");)
	{
           fw.write(textArea.getText());
           return true;
	}
	catch(Exception ex)
	{
            JOptionPane.showMessageDialog(this,"Error Saving File","Save Error",JOptionPane.ERROR);
	}
        return false;
    }
    
    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        JOptionPane.showMessageDialog(this,"Thanks for Using Notepad by l33t-c0d3r-66");
        System.exit(0);
    }//GEN-LAST:event_exitBtnActionPerformed

    private void copyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyBtnActionPerformed
        text = textArea.getSelectedText();
    }//GEN-LAST:event_copyBtnActionPerformed

    private void selectAllBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectAllBtnActionPerformed
        textArea.selectAll();
    }//GEN-LAST:event_selectAllBtnActionPerformed

    private void dateTimeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateTimeBtnActionPerformed
        String text2=""+textArea.getSelectedText();		
	if (text2.equals(""))
	{
            int gposdel = textArea.getCaretPosition();
            textArea.insert(stringTime,gposdel);
        }
        else
        {
            int gposdel = textArea.getCaretPosition();
            textArea.replaceSelection(stringTime);
        }
    }//GEN-LAST:event_dateTimeBtnActionPerformed

    private void printBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBtnActionPerformed
        try
	{
            printJob.print();
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,"Could not print","Print Error",JOptionPane.ERROR);
        }
    }//GEN-LAST:event_printBtnActionPerformed

    private void pageSetupBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pageSetupBtnActionPerformed
        printJob.printDialog();
    }//GEN-LAST:event_pageSetupBtnActionPerformed

    private void saveFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileBtnActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Text Documents (*.txt)", "txt"));
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.showSaveDialog(this);
        File file = fileChooser.getSelectedFile();
        if(file != null)
        {
            boolean isSaved = saveFile(file);
            if(isSaved)
            {
                JOptionPane.showMessageDialog(this,"File Saved Successfully!","Save",JOptionPane.INFORMATION_MESSAGE);
            }   
        }
    }//GEN-LAST:event_saveFileBtnActionPerformed

    private void pasteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasteBtnActionPerformed
        if (text.equals(""))
	{
            int gposdel = textArea.getCaretPosition();
            textArea.insert(text,gposdel);
	}
	else
        {
            int gposdel = textArea.getCaretPosition();
            textArea.replaceSelection(text);
	}
    }//GEN-LAST:event_pasteBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        text = textArea.getSelectedText();
	textArea.replaceSelection("");
			
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void findBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findBtnActionPerformed
        textToSearch = JOptionPane.showInputDialog("Enter text you want to search");
        if(textToSearch != null)
        {
            text=textArea.getText();
            int searchIndex = text.indexOf(textToSearch);
            if(searchIndex == -1)
                JOptionPane.showMessageDialog(this,"No Match Result Found","Find",JOptionPane.ERROR);
            textArea.select(searchIndex, searchIndex+textToSearch.length());
        }
    }//GEN-LAST:event_findBtnActionPerformed

    private void cutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cutBtnActionPerformed
        text = textArea.getSelectedText();
	textArea.replaceSelection("");
    }//GEN-LAST:event_cutBtnActionPerformed

    private void wordRapBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wordRapBtnActionPerformed
        textArea.setWrapStyleWord(wordRapBtn.getState());
    }//GEN-LAST:event_wordRapBtnActionPerformed

    private void aboutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutBtnActionPerformed
        JOptionPane.showMessageDialog(this, "This Notepad is Created by l33t-c0d3r-66 for JARS");
    }//GEN-LAST:event_aboutBtnActionPerformed

    private void featureUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_featureUpdateBtnActionPerformed
        JOptionPane.showMessageDialog(this, "More Freatures will be added soon by l33t-c0d3r-66. \n You can also contribute to this project :)");
    }//GEN-LAST:event_featureUpdateBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try 
        {
            for (LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception e) {
            // If Nimbus is not available, you can set the GUI to another look and feel.
        }
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Notepad().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutBtn;
    private javax.swing.JMenuItem copyBtn;
    private javax.swing.JMenuItem cutBtn;
    private javax.swing.JMenuItem dateTimeBtn;
    private javax.swing.JMenuItem deleteBtn;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitBtn;
    private javax.swing.JMenuItem featureUpdateBtn;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem findBtn;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem newFileBtn;
    private javax.swing.JMenuItem openFileBtn;
    private javax.swing.JMenuItem pageSetupBtn;
    private javax.swing.JMenuItem pasteBtn;
    private javax.swing.JMenuItem printBtn;
    private javax.swing.JMenuItem saveAsBtn;
    private javax.swing.JMenuItem saveFileBtn;
    private javax.swing.JMenuItem selectAllBtn;
    private javax.swing.JTextArea textArea;
    private javax.swing.JCheckBoxMenuItem wordRapBtn;
    // End of variables declaration//GEN-END:variables
}
